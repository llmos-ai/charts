global:
  postgresql:
    fullnameOverride: "llmos-agents-postgresql"
nameOverride: "llmos-agents"
langflow:
  backend:
    replicaCount: 1
    livenessProbe:
      httpGet:
        path: /health
        port: http
      failureThreshold: 3
      periodSeconds: 15
      timeoutSeconds: 5
      initialDelaySeconds: 30
    readinessProbe:
      httpGet:
        path: /health
        port: http
      failureThreshold: 3
      periodSeconds: 15
      timeoutSeconds: 5
      initialDelaySeconds: 30
    startupProbe:
      httpGet:
        path: /health
        port: http
      failureThreshold: 3
      periodSeconds: 15
      timeoutSeconds: 5
      initialDelaySeconds: 30
  frontend:
    enabled: true
    replicaCount: 1
    service:
      type: ClusterIP
      port: 8080
postgresql:
  enabled: true
  name: postgres
  auth:
    enablePostgresUser: true
    postgresPassword: ""
    username: &postgresUser "llmos-agents"
    password: ""
    database: "llmos_agents"
  image:
    registry: ghcr.io
    repository: llmos-ai/mirrored-bitnami-postgresql
    tag: 17.5.0-debian-12-r6
  global:
    storageClass: ""
    security:
      allowInsecureImages: true
  ## @param architecture PostgreSQL architecture (`standalone` or `replication`)
  architecture: standalone
  ## Replication configuration
  ## Ignored if `architecture` is `standalone`
  primary:
    persistence:
      enabled: true
      storageClass: ""
      accessModes:
        - ReadWriteOnce
      size: 1Gi

weaviate:
  enabled: true
  image:
    registry: ghcr.io
    repo: llmos-ai/mirrored-semitechnologies-weaviate
    tag: 1.30.6
  storage:
    size: 1Gi
    storageClassName: ""
langfuse:
  fullnameOverride: "llmos-agents-langfuse"
  langfuse:
    salt:
      value: "test123"
      secretKeyRef:
        name: ""
        key: ""
    web:
      service:
        type: NodePort
    additionalEnv: []
    nextauth:
      # -- When deploying to production, set the `nextauth.url` value to the canonical URL of your site.
      url: http://localhost:3000
      # -- Used to encrypt the NextAuth.js JWT, and to hash email verification tokens. Can be configured by value or existing secret reference.
      secret:
        value: "test123"
        secretKeyRef:
          name: ""
          key: ""
  redis:
    fullnameOverride: llmos-agents-redis
    host: "llmos-agents-redis-primary"
    primary:
      persistence:
        enabled: false
  clickhouse:
    fullnameOverride: "llmos-agents-clickhouse"
    host: "llmos-agents-clickhouse"
    resourcesPreset: small
    replicaCount: 1
    zookeeper:
      enabled: true
      replicaCount: 1
  postgresql:
    deploy: false
    host: "llmos-agents-postgresql"
    auth:
      username: *postgresUser
